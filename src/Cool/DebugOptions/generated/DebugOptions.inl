/* -----------------------------------------------------------------------------
 * This file was automatically generated by a Python script.
 * PLEASE DON'T EDIT IT DIRECTLY, your changes would be overwritten the next time the script is run.
 * Instead, go to "generate_debug_options.py" and edit the "DebugOptions" function there.
 * -----------------------------------------------------------------------------
 */

#pragma once

#include <Cool/Path/Path.h>
#include <Cool/Serialization/as_json.h>

namespace Cool {

class DebugOptions {
public:
#if DEBUG
    // clang-format off
[[nodiscard]] static auto log_when_creating_icon() -> bool& { return instance().log_when_creating_icon; }
#else
[[nodiscard]] static auto constexpr log_when_creating_icon() -> bool { return false; }
#endif
    // clang-format on

private:
#if DEBUG
    struct Instance {
        bool            log_when_creating_icon{false};
        ImGuiTextFilter filter;

    private:
        // Serialization
        friend class cereal::access;
        template<class Archive>
        void serialize(Archive& archive)
        {
            archive(
                cereal::make_nvp("Log when creating icon", log_when_creating_icon)
            );
        }
    };

    static void reset_all()
    {
        instance().filter.Clear();
        instance().log_when_creating_icon = false;
    }

    static auto load_debug_options() -> Instance
    {
        auto the_instance = Instance{};
        Cool::Serialization::from_json(the_instance, Cool::Path::root() + "/cache--debug-options.json");
        return the_instance;
    }

    static auto instance() -> Instance&
    {
        static auto the_instance = Instance{load_debug_options()};
        return the_instance;
    }
#endif

    friend class DebugOptionsDetails; // We go through this indirection so that only the files which include "DebugOptionsDetails" can call `imgui_checkboxes_for_all_options()`
    static void imgui_checkboxes_for_all_options()
    {
#if DEBUG
        instance().filter.Draw("Filter");
        if (ImGui::Button("Reset all debug options"))
        {
            reset_all();
        }
        ImGui::Separator();
        if (instance().filter.PassFilter("Log when creating icon"))
            ImGui::Checkbox("Log when creating icon", &instance().log_when_creating_icon);
#endif
    }
};

} // namespace Cool
