/* -----------------------------------------------------------------------------
 * This file was automatically generated by a Python script.
 * PLEASE DON'T EDIT IT DIRECTLY, your changes would be overwritten the next time the script is run.
 * Instead, go to "nodes_style_generator.py" and edit the "register_all_imnodes_color_elements" function there.
 * -----------------------------------------------------------------------------
 */

config.register_element({
    "Nodes_Bg",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_Bg];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_Bg] = color;
    },
    "",
});

config.register_element({
    "Nodes_Grid",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_Grid];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_Grid] = color;
    },
    "",
});

config.register_element({
    "Nodes_NodeBg",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeBg];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeBg] = color;
    },
    "",
});

config.register_element({
    "Nodes_NodeBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_HovNodeBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_HovNodeBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_HovNodeBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_SelNodeBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_SelNodeBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_SelNodeBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_NodeSelRect",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeSelRect];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeSelRect] = color;
    },
    "",
});

config.register_element({
    "Nodes_NodeSelRectBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeSelRectBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_NodeSelRectBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_HovLinkBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_HovLinkBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_HovLinkBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_SelLinkBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_SelLinkBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_SelLinkBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_HighlightLinkBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_HighlightLinkBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_HighlightLinkBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_LinkSelRect",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_LinkSelRect];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_LinkSelRect] = color;
    },
    "",
});

config.register_element({
    "Nodes_LinkSelRectBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_LinkSelRectBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_LinkSelRectBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_PinRect",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_PinRect];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_PinRect] = color;
    },
    "",
});

config.register_element({
    "Nodes_PinRectBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_PinRectBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_PinRectBorder] = color;
    },
    "",
});

config.register_element({
    "Nodes_Flow",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_Flow];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_Flow] = color;
    },
    "",
});

config.register_element({
    "Nodes_FlowMarker",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_FlowMarker];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_FlowMarker] = color;
    },
    "",
});

config.register_element({
    "Nodes_GroupBg",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_GroupBg];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_GroupBg] = color;
    },
    "",
});

config.register_element({
    "Nodes_GroupBorder",
    []() {
        return ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_GroupBorder];
    },
    [](ImVec4 const& color) {
        ax::NodeEditor::GetStyle().Colors[ax::NodeEditor::StyleColor_GroupBorder] = color;
    },
    "",
});
